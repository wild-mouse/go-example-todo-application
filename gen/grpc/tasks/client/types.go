// Code generated by goa v3.0.6, DO NOT EDIT.
//
// tasks gRPC client types
//
// Command:
// $ goa gen github.com/wild-mouse/go-example-todo-application/design

package client

import (
	"unicode/utf8"

	taskspb "github.com/wild-mouse/go-example-todo-application/gen/grpc/tasks/pb"
	tasks "github.com/wild-mouse/go-example-todo-application/gen/tasks"
	goa "goa.design/goa/v3/pkg"
)

// NewGetTaskRequest builds the gRPC request type from the payload of the
// "get_task" endpoint of the "tasks" service.
func NewGetTaskRequest(payload *tasks.GetTaskPayload) *taskspb.GetTaskRequest {
	message := &taskspb.GetTaskRequest{
		Id: payload.ID,
	}
	return message
}

// NewGetTaskResult builds the result type of the "get_task" endpoint of the
// "tasks" service from the gRPC response type.
func NewGetTaskResult(message *taskspb.GetTaskResponse) *tasks.Task {
	result := &tasks.Task{
		Name: message.Name,
	}
	if message.Id != 0 {
		result.ID = &message.Id
	}
	return result
}

// ValidateGetTaskResponse runs the validations defined on GetTaskResponse.
func ValidateGetTaskResponse(message *taskspb.GetTaskResponse) (err error) {
	if utf8.RuneCountInString(message.Name) > 100 {
		err = goa.MergeErrors(err, goa.InvalidLengthError("message.name", message.Name, utf8.RuneCountInString(message.Name), 100, false))
	}
	return
}
