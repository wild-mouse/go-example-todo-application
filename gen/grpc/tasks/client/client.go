// Code generated by goa v3.0.6, DO NOT EDIT.
//
// tasks gRPC client
//
// Command:
// $ goa gen github.com/wild-mouse/go-example-todo-application/design

package client

import (
	"context"

	taskspb "github.com/wild-mouse/go-example-todo-application/gen/grpc/tasks/pb"
	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli taskspb.TasksClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the tasks service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: taskspb.NewTasksClient(cc),
		opts:    opts,
	}
}

// GetTask calls the "GetTask" function in taskspb.TasksClient interface.
func (c *Client) GetTask() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildGetTaskFunc(c.grpccli, c.opts...),
			EncodeGetTaskRequest,
			DecodeGetTaskResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// GetTasks calls the "GetTasks" function in taskspb.TasksClient interface.
func (c *Client) GetTasks() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildGetTasksFunc(c.grpccli, c.opts...),
			nil,
			DecodeGetTasksResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// AddTask calls the "AddTask" function in taskspb.TasksClient interface.
func (c *Client) AddTask() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildAddTaskFunc(c.grpccli, c.opts...),
			EncodeAddTaskRequest,
			DecodeAddTaskResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// UpdateTask calls the "UpdateTask" function in taskspb.TasksClient interface.
func (c *Client) UpdateTask() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildUpdateTaskFunc(c.grpccli, c.opts...),
			EncodeUpdateTaskRequest,
			DecodeUpdateTaskResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// DeleteTask calls the "DeleteTask" function in taskspb.TasksClient interface.
func (c *Client) DeleteTask() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildDeleteTaskFunc(c.grpccli, c.opts...),
			EncodeDeleteTaskRequest,
			DecodeDeleteTaskResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}
