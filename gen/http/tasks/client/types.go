// Code generated by goa v3.0.6, DO NOT EDIT.
//
// tasks HTTP client types
//
// Command:
// $ goa gen github.com/wild-mouse/go-example-todo-application/design

package client

import (
	"unicode/utf8"

	tasks "github.com/wild-mouse/go-example-todo-application/gen/tasks"
	goa "goa.design/goa/v3/pkg"
)

// GetTaskResponseBody is the type of the "tasks" service "get_task" endpoint
// HTTP response body.
type GetTaskResponseBody struct {
	// ID is the unique id of the task.
	ID *uint32 `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of task
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
}

// NewGetTaskTaskOK builds a "tasks" service "get_task" endpoint result from a
// HTTP "OK" response.
func NewGetTaskTaskOK(body *GetTaskResponseBody) *tasks.Task {
	v := &tasks.Task{
		ID:   body.ID,
		Name: *body.Name,
	}
	return v
}

// ValidateGetTaskResponseBody runs the validations defined on
// get_task_response_body
func ValidateGetTaskResponseBody(body *GetTaskResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Name != nil {
		if utf8.RuneCountInString(*body.Name) > 100 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.name", *body.Name, utf8.RuneCountInString(*body.Name), 100, false))
		}
	}
	return
}
