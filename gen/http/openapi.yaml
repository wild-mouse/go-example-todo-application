swagger: "2.0"
info:
  title: TODO Task Service
  description: Service for tasks
  version: ""
host: localhost:8000
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /task/{id}:
    delete:
      tags:
      - tasks
      summary: delete_task tasks
      operationId: tasks#delete_task
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/TasksDeleteTaskResponseBody'
            required:
            - name
      schemes:
      - http
  /tasks:
    get:
      tags:
      - tasks
      summary: get_tasks tasks
      operationId: tasks#get_tasks
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              $ref: '#/definitions/taskResponse'
      schemes:
      - http
    post:
      tags:
      - tasks
      summary: add_task tasks
      operationId: tasks#add_task
      parameters:
      - name: add_task_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/TasksAddTaskRequestBody'
          required:
          - name
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/TasksAddTaskResponseBody'
            required:
            - name
      schemes:
      - http
  /tasks/{id}:
    get:
      tags:
      - tasks
      summary: get_task tasks
      operationId: tasks#get_task
      parameters:
      - name: id
        in: path
        description: ID of task
        required: true
        type: integer
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/TasksGetTaskResponseBody'
            required:
            - name
      schemes:
      - http
    put:
      tags:
      - tasks
      summary: update_task tasks
      operationId: tasks#update_task
      parameters:
      - name: id
        in: path
        description: ID is the unique id of the task.
        required: true
        type: integer
      - name: update_task_request_body
        in: body
        required: true
        schema:
          $ref: '#/definitions/TasksUpdateTaskRequestBody'
          required:
          - name
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/TasksUpdateTaskResponseBody'
            required:
            - name
      schemes:
      - http
definitions:
  TasksAddTaskRequestBody:
    title: TasksAddTaskRequestBody
    type: object
    properties:
      id:
        type: integer
        description: ID is the unique id of the task.
        example: 1
        format: int32
      name:
        type: string
        description: Name of task
        example: Implement awesome application using Goa
        maxLength: 100
    example:
      id: 1
      name: Implement awesome application using Goa
    required:
    - name
  TasksAddTaskResponseBody:
    title: TasksAddTaskResponseBody
    type: object
    properties:
      id:
        type: integer
        description: ID is the unique id of the task.
        example: 1
        format: int32
      name:
        type: string
        description: Name of task
        example: Implement awesome application using Goa
        maxLength: 100
    example:
      id: 1
      name: Implement awesome application using Goa
    required:
    - name
  TasksDeleteTaskResponseBody:
    title: TasksDeleteTaskResponseBody
    type: object
    properties:
      id:
        type: integer
        description: ID is the unique id of the task.
        example: 1
        format: int32
      name:
        type: string
        description: Name of task
        example: Implement awesome application using Goa
        maxLength: 100
    example:
      id: 1
      name: Implement awesome application using Goa
    required:
    - name
  TasksGetTaskResponseBody:
    title: TasksGetTaskResponseBody
    type: object
    properties:
      id:
        type: integer
        description: ID is the unique id of the task.
        example: 1
        format: int32
      name:
        type: string
        description: Name of task
        example: Implement awesome application using Goa
        maxLength: 100
    example:
      id: 1
      name: Implement awesome application using Goa
    required:
    - name
  TasksUpdateTaskRequestBody:
    title: TasksUpdateTaskRequestBody
    type: object
    properties:
      name:
        type: string
        description: Name of task
        example: Implement awesome application using Goa
        maxLength: 100
    example:
      name: Implement awesome application using Goa
    required:
    - name
  TasksUpdateTaskResponseBody:
    title: TasksUpdateTaskResponseBody
    type: object
    properties:
      id:
        type: integer
        description: ID is the unique id of the task.
        example: 1
        format: int32
      name:
        type: string
        description: Name of task
        example: Implement awesome application using Goa
        maxLength: 100
    example:
      id: 1
      name: Implement awesome application using Goa
    required:
    - name
  taskResponse:
    title: taskResponse
    type: object
    properties:
      id:
        type: integer
        description: ID is the unique id of the task.
        example: 1
        format: int32
      name:
        type: string
        description: Name of task
        example: Implement awesome application using Goa
        maxLength: 100
    description: Task describes a task to be acted.
    example:
      id: 1
      name: Implement awesome application using Goa
    required:
    - name
