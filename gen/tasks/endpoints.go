// Code generated by goa v3.0.6, DO NOT EDIT.
//
// tasks endpoints
//
// Command:
// $ goa gen github.com/wild-mouse/go-example-todo-application/design

package tasks

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "tasks" service endpoints.
type Endpoints struct {
	GetTask goa.Endpoint
}

// NewEndpoints wraps the methods of the "tasks" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetTask: NewGetTaskEndpoint(s),
	}
}

// Use applies the given middleware to all the "tasks" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetTask = m(e.GetTask)
}

// NewGetTaskEndpoint returns an endpoint function that calls the method
// "get_task" of service "tasks".
func NewGetTaskEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetTaskPayload)
		return s.GetTask(ctx, p)
	}
}
